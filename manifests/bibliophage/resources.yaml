apiVersion: v1
kind: Namespace
metadata:
  name: bibliophage
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kube-vip.io/loadbalancerIPs: 192.168.14.8
  labels: null
  name: ferretdb
  namespace: bibliophage
spec:
  ports:
  - name: main
    port: 27017
    protocol: TCP
    targetPort: 27017
  publishNotReadyAddresses: false
  selector:
    app.kubernetes.io/name: ferretdb
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/name: ferretdb
    app.kubernetes.io/part-of: bibliophage
  name: ferretdb
  namespace: bibliophage
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ferretdb
  template:
    metadata:
      labels:
        app.kubernetes.io/component: database
        app.kubernetes.io/name: ferretdb
        app.kubernetes.io/part-of: bibliophage
    spec:
      containers:
      - env:
        - name: FERRETDB_POSTGRESQL_URL
          valueFrom:
            secretKeyRef:
              key: connectionstring
              name: ferretdb
        - name: FERRETDB_TELEMETRY
          value: disable
        image: ghcr.io/ferretdb/ferretdb:2.1.0
        name: ferretdb
        ports:
        - containerPort: 27017
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: db-standard-user
  namespace: bibliophage
spec:
  data:
  - remoteRef:
      key: kv/nekropolis/bibliophage/db-standard-user
      property: username
    secretKey: username
  - remoteRef:
      key: kv/nekropolis/bibliophage/db-standard-user
      property: password
    secretKey: password
  refreshInterval: 1h0m0s
  refreshPolicy: Periodic
  secretStoreRef:
    kind: ClusterSecretStore
    name: openbao-backend
  target:
    name: db-standard-user
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: db-superuser
  namespace: bibliophage
spec:
  data:
  - remoteRef:
      key: kv/nekropolis/bibliophage/db-superuser
      property: username
    secretKey: username
  - remoteRef:
      key: kv/nekropolis/bibliophage/db-superuser
      property: password
    secretKey: password
  refreshInterval: 1h0m0s
  refreshPolicy: Periodic
  secretStoreRef:
    kind: ClusterSecretStore
    name: openbao-backend
  target:
    name: db-superuser
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: ferretdb
  namespace: bibliophage
spec:
  data:
  - remoteRef:
      key: kv/nekropolis/bibliophage/db-standard-user
      property: username
    secretKey: username
  - remoteRef:
      key: kv/nekropolis/bibliophage/db-standard-user
      property: password
    secretKey: password
  refreshInterval: 1h0m0s
  refreshPolicy: Periodic
  secretStoreRef:
    kind: ClusterSecretStore
    name: openbao-backend
  target:
    name: ferretdb
    template:
      data:
        connectionstring: postgres://{{ .username }}:{{ .password }}@bibliophage-documents-rw:5432/documents
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: bibliophage-documents
  namespace: bibliophage
spec:
  bootstrap:
    initdb:
      database: documents
      owner: bibliophage
      postInitApplicationSQL:
      - CREATE EXTENSION IF NOT EXISTS documentdb CASCADE;
      - GRANT SET ON PARAMETER documentdb.maxuserlimit TO bibliophage;
      - GRANT documentdb_admin_role TO bibliophage;
      secret:
        name: db-standard-user
  imageCatalogRef:
    apiGroup: postgresql.cnpg.io
    kind: ClusterImageCatalog
    major: 17
    name: documentdb-bookworm
  instances: 1
  managed:
    services:
      additional:
      - selectorType: rw
        serviceTemplate:
          metadata:
            annotations:
              kube-vip.io/loadbalancerIPs: 192.168.14.7
            name: bibliophage-documents-db-rw
          spec:
            type: LoadBalancer
  postgresGID: 999
  postgresUID: 999
  postgresql:
    parameters:
      cron.database_name: documents
      cron.host: ""
    shared_preload_libraries:
    - pg_cron
    - pg_documentdb_core
    - pg_documentdb
  storage:
    size: 10Gi
  superuserSecret:
    name: db-superuser
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: bibliophage-vectors
  namespace: bibliophage
spec:
  bootstrap:
    initdb:
      database: vectors
      owner: bibliophage
      secret:
        name: db-standard-user
  imageCatalogRef:
    apiGroup: postgresql.cnpg.io
    kind: ClusterImageCatalog
    major: 17
    name: postgresql-standard-trixie
  instances: 3
  managed:
    services:
      additional:
      - selectorType: rw
        serviceTemplate:
          metadata:
            annotations:
              kube-vip.io/loadbalancerIPs: 192.168.14.6
            name: bibliophage-vectors-db-rw
          spec:
            type: LoadBalancer
  storage:
    size: 10Gi
  superuserSecret:
    name: db-superuser
---
apiVersion: postgresql.cnpg.io/v1
kind: Database
metadata:
  name: bibliophage-documents
  namespace: bibliophage
spec:
  cluster:
    name: bibliophage-documents
  name: documents
  owner: bibliophage
---
apiVersion: postgresql.cnpg.io/v1
kind: Database
metadata:
  name: bibliophage-vectors
  namespace: bibliophage
spec:
  cluster:
    name: bibliophage-vectors
  extensions:
  - ensure: present
    name: vector
  name: vectors
  owner: bibliophage
